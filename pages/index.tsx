/* eslint-disable react/no-children-prop */
import Head from "next/head";
import { Inter } from "next/font/google";
import styles from "@/styles/Home.module.css";
import { Canvas } from "@react-three/fiber";
import Scan from "@/components/scan/Scan";
import { OrbitControls } from "@react-three/drei";
import { Suspense, useRef, useState } from "react";
import Image from "next/image";
const inter = Inter({ subsets: ["latin"] });

var scanPosition: number = 0;
var scanPositions: number[][] = [
  [0, -15, 0],
  [0, 15, 0],
  [15, 0, 0],
  [-15, 0, 0],
  [0, 0, 15],
  [0, 0, -15],
];
const camPosition: number[] = [0, 0, 0];
var focusIterator = 0;

export default function Home() {
  const [camPos, setCamPos] = useState(camPosition);

  function repositionCam(currentPos: number) {
    let pos = ((focusIterator + currentPos) % 5) + 1;

    return pos;
  }

  if (typeof window === "object") {
    document.onkeydown = (e) => {
      switch (e.code) {
        case "ArrowLeft":
          focusIterator -= 1;
          break;
        case "ArrowRight":
          focusIterator += 1;
          break;
      }
      if (focusIterator < 0) focusIterator = 0;
      if (focusIterator > 5) focusIterator = 5;

      var scanPosition = scanPositions[focusIterator];
      scanPosition[0] += camPosition[0];
      scanPosition[1] += camPosition[1];
      scanPosition[2] += camPosition[2];
      setCamPos(scanPosition);

      console.log(camPos);
    };
  }

  const audio = useRef<HTMLVideoElement>(null);

  function handlePlay() {
    console.log("play2");
    audio.current?.play();

    console.log(audio.current?.childNodes);
  }
  function handlePause() {
    console.log("pause2");
    audio.current?.pause();
  }
  function handleStop() {
    console.log("stop2");
    audio.current?.pause();
    audio.current!.currentTime = 0;
  }

  function Loading() {
    return (
      <div className={styles.loading}>
        <Image
          src="/images/bernd.gif"
          alt="Bilder von Bernd"
          width={640}
          height={360}
        />
      </div>
    );
  }

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={styles.main}>
        <div></div>
        <Suspense>
          <Suspense fallback={<Loading />}>
            <div className={styles.sceneContainer}>
              <Canvas
                shadows
                className={styles.canvas}
                camera={{
                  position: [camPosition[0], camPosition[1], camPosition[2]],
                  // position: [camPos[0], camPos[1], camPos[2]],
                }}
              >
                {/* <gridHelper /> */}
                <ambientLight color="white" intensity={0.3} />
                <directionalLight
                  intensity={1.5}
                  position={[-3, 2, 0]}
                  castShadow
                />
                {/* <SpotLight
              position={[3, 2, 2]}
              distance={15}
              angle={1.0}
              attenuation={15}
              anglePower={5} // Diffuse-cone anglePower (default: 5)
            /> */}
                {/* <Lightmap> */}
                <Scan
                  id="dach"
                  filePath="/scans/Dach_scan.glb"
                  position={scanPositions[0]}
                  // position={scanPositions[repositionScan(2)]}
                  props={""}
                  inFocus={focusIterator === 0 ? true : false}
                  float={focusIterator === 0 ? false : true}
                  audioURL="/audio/Dach.mp3"
                />
                <Scan
                  id="flur"
                  filePath="/scans/Flur_scan.glb"
                  position={scanPositions[1]}
                  // position={scanPositions[repositionScan(1)]}
                  props={""}
                  inFocus={focusIterator === 1 ? true : false}
                  float={focusIterator === 1 ? false : true}
                  audioURL={focusIterator === 1 ? "/audio/Flur.mp3" : ""}
                />
                <Scan
                  id="k체che"
                  filePath="/scans/K체che_scan.glb"
                  position={scanPositions[2]}
                  // position={scanPositions[repositionScan(3)]}
                  props={""}
                  inFocus={focusIterator === 2 ? true : false}
                  float={focusIterator === 2 ? false : true}
                  audioURL={focusIterator === 2 ? "/audio/K체che.mp3" : ""}
                />
                <Scan
                  id="polizeirevier"
                  filePath="/scans/Polizeirevier_scan.glb"
                  position={scanPositions[3]}
                  // position={scanPositions[repositionScan(4)]}
                  props={""}
                  inFocus={focusIterator === 3 ? true : false}
                  float={focusIterator === 3 ? false : true}
                  audioURL={
                    focusIterator === 3 ? "/audio/Polizeirevier.mp3" : ""
                  }
                />
                <Scan
                  id="wohnzimmer"
                  filePath="/scans/Wohnzimmer_scan.glb"
                  position={scanPositions[4]}
                  // position={scanPositions[repositionScan(5)]}
                  props={""}
                  inFocus={focusIterator === 4 ? true : false}
                  float={focusIterator === 4 ? false : true}
                  audioURL={focusIterator === 4 ? "/audio/Wohnzimmer.mp3" : ""}
                />
                <Scan
                  id="parkplatz"
                  filePath="/scans/Parkplatz_scan.glb"
                  position={scanPositions[5]}
                  // position={scanPositions[repositionScan(6)]}
                  props={""}
                  inFocus={focusIterator === 5 ? true : false}
                  float={focusIterator === 5 ? false : true}
                  audioURL={focusIterator === 5 ? "/audio/Parkplatz.mp3" : ""}
                />

                <OrbitControls
                  // @ts-ignore: Spring type is Vector3 Type (Typescript return error on position)
                  target={scanPositions[focusIterator]}
                  rotateSpeed={0.3}
                  panSpeed={0.05}
                />
                {/* </Lightmap> */}
              </Canvas>
            </div>

            <div className={styles["audio-controls"]}>
              <div id="play" onClick={() => handlePlay()}>
                Play
              </div>
              <div id="pause" onClick={() => handlePause()}>
                Pause
              </div>
              <div id="stop" onClick={() => handleStop()}>
                Stop
              </div>
            </div>

            <video
              className={styles.audio}
              ref={audio}
              src={`/audio/Dach.mp3`}
              muted

              // controls
              // muted
            >
              <track
                className={styles.track}
                default
                kind="captions"
                src="/captions/Dach.vtt"
              />
            </video>

            {/* <div className={styles.captions}>
          <span>Das ist mein altes Zimmer</span>
          <span>
            in der Wohnung meiner Mutter in Esslingen im Dachgeschoss.
          </span>
          <span>Ich wohn{"'"} mittlerweile in Stuttgart,</span>
          <span>
            aber da meine Freundin Marla zu besuch ist, schlafen wir ein, zwei
            N채chte dort
          </span>
        </div> */}
          </Suspense>
        </Suspense>
      </main>
    </>
  );
}
